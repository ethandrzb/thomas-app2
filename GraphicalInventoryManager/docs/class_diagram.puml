@startuml
'https://plantuml.com/class-diagram

+class InventoryManagementApplication
{
    +static void main(String[] args)
    +void start(Stage stage)
}

+class InventoryManagementApplicationController
{
    -searchByOption selectedSearchOption
    
    -Inventory inventory

    -TableView<InventoryItem> inventoryTableView

    -TableColumn<InventoryItem, String> nameTableViewColumn
    -TableColumn<InventoryItem, String> serialTableViewColumn
    -TableColumn<InventoryItem, Double> valueTableViewColumn

    -TextField itemNameTextField
    -TextField itemSerialTextField
    -TextField itemValueTextField

    -ComboBox<searchByOption> searchModeComboBox
    -TextField searchTextField

    +void changeNameCellEvent(TableColumn.CellEditEvent<InventoryItem, String> modifiedCell)
    +void changeSerialCellEvent(TableColumn.CellEditEvent<InventoryItem, String> modifiedCell)
    +void changeValueCellEvent(TableColumn.CellEditEvent<InventoryItem, Double> modifiedCell)

    +void addItemButtonPressed()
    -void clearInputTextFields()
    +void clearInventoryMenuItemSelected()

    +void saveMenuItemSelected()
    +void loadMenuItemSelected()
    -FileChooser getFileChooser()

    +void removeSelectedItemsMenuItemSelected()

    +void initialize()
    -void initSortableFilteredListAndSearchFunction()
    -void initSearchModeComboBox()
    -void initCustomComboBoxOptionText()
    -void initTableView()
    -void displayErrorDialog(String title, String message)
}

enum searchByOption
{
    NAME("By Name")
    SERIAL("By Serial")
    
    -final String optionText
    
    searchByOption(String optionText)
}

+class InventoryItem
{
    -final SimpleStringProperty name
    -final SimpleStringProperty serial
    -final SimpleDoubleProperty value

    +InventoryItem(String name, String serial, double value)

    +void setName(String name)
    +String getName()

    +void setSerial(String serial)
    +String getSerial()

    +void setValue(double value)
    +double getValue()

    +String toString()
}

+class Inventory
{
    -final SimpleListProperty<InventoryItem> inventoryItems

    +Inventory()

    +void addItem(String name, String serial, double value)
    +SimpleListProperty<InventoryItem> inventoryItemsProperty()
    +boolean containsSerial(String serial)
    +void removeItems(List<InventoryItem> items)
    +void clear()

    +String toString()
}

+class ApplicationStateSerializer
{
    +Inventory loadInventory(File file)
    -Inventory loadFromTSV(File file)
    -Inventory loadFromHTML(File file)
    -Inventory loadFromJSON(File file)
    
    -String currencyToNumericalString(String currency)

    +void saveInventory(Inventory inventory, File file)
    -void saveToTSV(Inventory inventory, File file)
    -void saveToHTML(Inventory inventory, File file)
    -void saveToJSON(Inventory inventory, File file)
}

+class InventoryValidator
{
    -boolean errorDialogsEnabled

    +boolean getErrorDialogsEnabled()
    +void setErrorDialogsEnabled(boolean errorDialogsEnabled)

    +boolean isValidItemName(String name)
    
    -boolean isValidSerialFormat(String serial)
    +boolean isValidSerial(Inventory inventory, String serial, String oldSerial)
    
    +boolean isValidMonetaryValue(String monetaryValue)
    
    +boolean validateAllInputs(Inventory inventory, String name, String serial, String value)
    
    -void displayErrorDialog(String title, String message)
}

InventoryItem --* Inventory
Inventory --* InventoryManagementApplicationController
InventoryValidator --* InventoryManagementApplicationController
searchByOption --* InventoryManagementApplicationController
InventoryValidator --* ApplicationStateSerializer
ApplicationStateSerializer --* InventoryManagementApplicationController

@enduml